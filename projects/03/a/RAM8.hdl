// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address, a=ml0, b=ml1, c=ml2, d=ml3, e=ml4, f=ml5, g=ml6, h=ml7);
	Register(in=in, load=ml0, out=o0);
	Register(in=in, load=ml1, out=o1);
	Register(in=in, load=ml2, out=o2);
	Register(in=in, load=ml3, out=o3);
	Register(in=in, load=ml4, out=o4);
	Register(in=in, load=ml5, out=o5);
	Register(in=in, load=ml6, out=o6);
	Register(in=in, load=ml7, out=o7);

	Mux8Way16(a=o0, b=o1, c=o2, d=o3, e=o4, f=o5, g=o6, h=o7, sel=address, out=out);
}
